# This configuration is based on the one used by the egui project.
# It enforces a strict set of lints to maintain high code quality.
# https://doc.rust-lang.org/nightly/clippy/lint_configuration.html

# We are using Rust 2021 edition, but this is good practice.
msrv = "1.77"

# It's common and expected to use unwrap in tests.
allow-unwrap-in-tests = true

# We want suggestions, even if it changes a public API.
avoid-breaking-exported-api = false

# Maximum number of boolean parameters for a function. More than this suggests
# a struct or enum might be a better choice.
max-fn-params-bools = 2

# Maximum size for files included with `include_bytes!`.
# This is a very large value, effectively just a safety net.
max-include-file-size = 1000000

# A high threshold for type complexity, but good to have a limit.
type-complexity-threshold = 350

# --- Disallowed Items ---
# These are things we want to avoid using project-wide.

# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_macros
disallowed-macros = [
    # `dbg!` is for temporary debugging and should not be committed.
    'dbg',

    # `unimplemented!` should be replaced with actual implementation before merging.
    'std::unimplemented',

    # Use the `log` crate instead of printing directly to stdout/stderr.
    # This allows for configurable logging levels and output destinations.
    'std::eprint',
    'std::eprintln',
    'std::print',
    'std::println',
]

# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_methods
disallowed-methods = [
    # `std::env::temp_dir` can be problematic. If temporary directories are needed,
    # the `tempfile` crate is a more robust solution.
    "std::env::temp_dir",

    # Use `std::thread::Builder` and name your threads for easier debugging.
    "std::thread::spawn",

    # SHA1 is cryptographically broken and should not be used for security purposes.
    "sha1::Digest::new",

    # We compile with `panic = "abort"` in release builds, which makes this ineffective.
    "std::panic::catch_unwind",
]

# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_names
# No disallowed names for now, but could be useful for deprecating items.
disallowed-names = []

# https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_types
disallowed-types = [
    # Use the faster & simpler non-poisonable primitives in `parking_lot` or `crossbeam`
    # if complex locking is needed. For simple cases, `std::sync` is fine, but this
    # encourages being mindful of locking strategies.
    "std::sync::Mutex",
    "std::sync::RwLock",
    "std::sync::Condvar",

    # SHA1 is cryptographically broken.
    "ring::digest::SHA1_FOR_LEGACY_USE_ONLY",
]

# --- Doc Lints ---
# Allow-list of words for markdown in docstrings that clippy might otherwise flag as typos.
# https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
doc-valid-idents = [
    "egui",
    "eframe",
    "winit",
    "glow",
    "wgpu",
    "syntect",
    "resvg",
    "rfd",
    "crossbeam",
    "rayon",
    "serde",
    "json",
    "toml",
    "yaml",
    "html",
    "css",
    "js",
    "ts",
    "jsx",
    "tsx",
    "wasm",
    "const",
    "struct",
    "enum",
    "fn",
    "impl",
    "macos",
    "ios",
    "linux",
    "windows",
    "ui",
    "id",
    "rgba",
    "hsva",
    "srgb",
    "lcha",
    "oklab",
    "kb",
    "mb",
    "gb",
    "kib",
    "mib",
    "gib",
    "loc",
    "png",
    "jpeg",
    "jpg",
    "gif",
    "bmp",
    "ico",
    "tiff",
    "svg",
    "pdf",
    "api",
    "apis",
    "uri",
    "uris",
    "url",
    "urls",
    "http",
    "https",
    "llm",
    "llms",
    "mpmc",
    "fifo",
    "ci",
    "os",
    "gui",
    "gpu",
    "cpu",
    "ram",
    "rgba",
    "unmultiplied",
    "premultiplied",
    "subpixel",
    "antialiasing",
    "tessellation",
    "tessellator",
    "rasterize",
    "rasterization",
    "monospace",
    "proportional",
    "codepoint",
    "codepoints",
    "glyph",
    "glyphs",
    "kerning",
    "ligature",
    "ligatures",
    "em",
    "rem",
    "px",
    "pt",
    "dpi",
    "lorem",
    "ipsum",
    "phosphor",
    "github",
    "sublime",
    "textmate",
    "vscode",
    "jetbrains",
    "intellij",
    "clion",
    "rustrover",
    "rustc",
    "cargo",
    "clippy",
    "rustdoc",
    "rustfmt",
    "rustup",
    "tokio",
    "async",
    "await",
    "serde",
    "json",
    "ron",
    "yaml",
    "toml",
    "struct",
    "enum",
    "trait",
    "impl",
    "fn",
    "const",
    "let",
    "mut",
    "ref",
    "pub",
    "crate",
    "mod",
    "use",
    "self",
    "super",
    "true",
    "false",
    "ok",
    "err",
    "some",
    "none",
    "vec",
    "hashmap",
    "hashset",
    "btreemap",
    "btreeset",
    "str",
    "string",
    "osstr",
    "osstring",
    "path",
    "pathbuf",
    "arc",
    "rc",
    "box",
    "pin",
    "mutex",
    "rwlock",
    "condvar",
    "mpsc",
    "oneshot",
    "watch",
    "broadcast",
    "channel",
    "sender",
    "receiver",
    "tx",
    "rx",
    "thread",
    "joinhandle",
    "spawn",
    "join",
    "yield",
    "panic",
    "unwind",
    "abort",
    "unreachable",
    "todo",
    "unimplemented",
    "dbg",
    "println",
    "eprintln",
    "print",
    "eprint",
    "format",
    "write",
    "writeln",
    "vec",
    "macro",
    "macros",
    "derive",
    "attribute",
    "attributes",
    "cfg",
    "cfgs",
    "env",
    "var",
    "vars",
    "consts",
    "static",
    "statics",
    "lifetime",
    "lifetimes",
    "generic",
    "generics",
    "where",
    "clause",
    "clauses",
    "bound",
    "bounds",
    "type",
    "types",
    "trait",
    "traits",
    "object",
    "objects",
    "dyn",
    "async",
    "await",
    "future",
    "futures",
    "stream",
    "streams",
    "sink",
    "sinks",
    "iterator",
    "iterators",
    "intoiterator",
    "fromiterator",
    "from",
    "into",
    "asref",
    "asmut",
    "borrow",
    "borrowmut",
    "deref",
    "derefmut",
    "drop",
    "clone",
    "copy",
    "default",
    "debug",
    "display",
    "partialeq",
    "eq",
    "partialord",
    "ord",
    "hash",
    "send",
    "sync",
    "sized",
    "unpin",
    "unwindsafe",
    "refunwindsafe",
    "any",
    "bool",
    "char",
    "f32",
    "f64",
    "i8",
    "i16",
    "i32",
    "i64",
    "i128",
    "isize",
    "u8",
    "u16",
    "u32",
    "u64",
    "u128",
    "usize",
    "tuple",
    "tuples",
    "array",
    "arrays",
    "slice",
    "slices",
    "pointer",
    "pointers",
    "reference",
    "references",
    "mut",
    "const",
    "unsafe",
    "extern",
    "c",
    "abi",
    "repr",
    "align",
    "packed",
    "union",
    "unions",
    "bitfield",
    "bitfields",
    "volatile",
    "atomic",
    "atomics",
    "simd",
    "intrinsics",
    "inline",
    "cold",
    "hot",
    "likely",
    "unlikely",
    "nonnull",
    "unique",
    "shared",
    "weak",
    "arc",
    "rc",
    "box",
    "pin",
    "cell",
    "refcell",
    "once",
    "lazy",
    "mutex",
    "rwlock",
    "condvar",
    "mpsc",
    "oneshot",
    "watch",
    "broadcast",
    "channel",
    "sender",
    "receiver",
    "tx",
    "rx",
    "thread",
    "joinhandle",
    "spawn",
    "join",
    "yield",
    "panic",
    "unwind",
    "abort",
    "unreachable",
    "todo",
    "unimplemented",
    "dbg",
    "println",
    "eprintln",
    "print",
    "eprint",
    "format",
    "write",
    "writeln",
    "vec",
    "macro",
    "macros",
    "derive",
    "attribute",
    "attributes",
    "cfg",
    "cfgs",
    "env",
    "var",
    "vars",
    "consts",
    "static",
    "statics",
    "lifetime",
    "lifetimes",
    "generic",
    "generics",
    "where",
    "clause",
    "clauses",
    "bound",
    "bounds",
    "type",
    "types",
    "trait",
    "traits",
    "object",
    "objects",
    "dyn",
    "async",
    "await",
    "future",
    "futures",
    "stream",
    "streams",
    "sink",
    "sinks",
    "iterator",
    "iterators",
    "intoiterator",
    "fromiterator",
    "from",
    "into",
    "asref",
    "asmut",
    "borrow",
    "borrowmut",
    "deref",
    "derefmut",
    "drop",
    "clone",
    "copy",
    "default",
    "debug",
    "display",
    "partialeq",
    "eq",
    "partialord",
    "ord",
    "hash",
    "send",
    "sync",
    "sized",
    "unpin",
    "unwindsafe",
    "refunwindsafe",
    "any",
    "bool",
    "char",
    "f32",
    "f64",
    "i8",
    "i16",
    "i32",
    "i64",
    "i128",
    "isize",
    "u8",
    "u16",
    "u32",
    "u64",
    "u128",
    "usize",
    "tuple",
    "tuples",
    "array",
    "arrays",
    "slice",
    "slices",
    "pointer",
    "pointers",
    "reference",
    "references",
    "mut",
    "const",
    "unsafe",
    "extern",
    "c",
    "abi",
    "repr",
    "align",
    "packed",
    "union",
    "unions",
    "bitfield",
    "bitfields",
    "volatile",
    "atomic",
    "atomics",
    "simd",
    "intrinsics",
    "inline",
    "cold",
    "hot",
    "likely",
    "unlikely",
    "nonnull",
    "unique",
    "shared",
    "weak",
]